model Order {
    id String @id @default(uuid())

    captivityBranch     String
    methodOfCollection  String
    salesRep            String?
    referenceNumber     String?
    firstName           String
    lastName            String
    companyName         String
    countryRegion       String
    streetAddress       String
    apartmentSuite      String?
    townCity            String
    province            String
    postcode            String
    phone               String
    email               String
    orderNotes          String?
    status              OrderStatus @default(PENDING)
    totalAmount         Float
    agreeTerms          Boolean     @default(false)
    receiveEmailReviews Boolean?    @default(false)
    createdAt           DateTime    @default(now())
    updatedAt           DateTime    @updatedAt
    orderItems          OrderItem[]

    userId String
    user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@map("orders")
}

model OrderItem {
    id          String    @id @default(uuid())
    orderId     String
    variationId String
    quantity    Int
    price       Float
    order       Order     @relation(fields: [orderId], references: [id], onDelete: Cascade)
    variation   Variation @relation(fields: [variationId], references: [id], onDelete: Cascade)

    @@map("order_items")
}
